{"remainingRequest":"/Users/apple/fish-wheels/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/fish-wheels/src/components/col.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/fish-wheels/src/components/col.vue","mtime":1592571664958},{"path":"/Users/apple/fish-wheels/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KCmxldCB2YWxpZGF0b3IgPSAodmFsdWUpID0+IHsKICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKQogIGxldCB2YWxpZCA9IHRydWUKICBrZXlzLmZvckVhY2goa2V5ID0+IHsKICAgIGlmICghWydzcGFuJywgJ29mZnNldCddLmluY2x1ZGVzKGtleSkpIHsKICAgICAgdmFsaWQgPSBmYWxzZQogICAgfQogIH0pCiAgcmV0dXJuIHZhbGlkCn0KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdHdWx1Q29sJywKICBwcm9wczogewogICAgc3BhbjogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddCiAgICB9LAogICAgb2Zmc2V0OiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10KICAgIH0sCiAgICBpcGFkOiB7dHlwZTogT2JqZWN0LCB2YWxpZGF0b3IsfSwKICAgIG5hcnJvd1BjOiB7dHlwZTogT2JqZWN0LCB2YWxpZGF0b3IsfSwKICAgIHBjOiB7dHlwZTogT2JqZWN0LCB2YWxpZGF0b3IsfSwKICAgIHdpZGVQYzoge3R5cGU6IE9iamVjdCwgdmFsaWRhdG9yLH0KICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgZ3V0dGVyOiAwLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlQ2xhc3NlcyAob2JqLCBzdHIgPSAnJykgewogICAgICBpZiAoIW9iaikge3JldHVybiBbXX0KICAgICAgbGV0IGFycmF5ID0gW10KICAgICAgaWYgKG9iai5zcGFuKSB7IGFycmF5LnB1c2goYGNvbC0ke3N0cn0ke29iai5zcGFufWApIH0KICAgICAgaWYgKG9iai5vZmZzZXQpIHsgYXJyYXkucHVzaChgb2Zmc2V0LSR7c3RyfSR7b2JqLm9mZnNldH1gKSB9CiAgICAgIHJldHVybiBhcnJheQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvbENsYXNzICgpIHsKICAgICAgbGV0IHtzcGFuLCBvZmZzZXQsIGlwYWQsIG5hcnJvd1BjLCBwYywgd2lkZVBjfSA9IHRoaXMKICAgICAgbGV0IGNyZWF0ZUNsYXNzZXMgPSB0aGlzLmNyZWF0ZUNsYXNzZXMKICAgICAgcmV0dXJuIFsKICAgICAgICAuLi5jcmVhdGVDbGFzc2VzKHtzcGFuLCBvZmZzZXR9KSwKICAgICAgICAuLi5jcmVhdGVDbGFzc2VzKGlwYWQsICdpcGFkLScpLAogICAgICAgIC4uLmNyZWF0ZUNsYXNzZXMobmFycm93UGMsICduYXJyb3ctcGMtJyksCiAgICAgICAgLi4uY3JlYXRlQ2xhc3NlcyhwYywgJ3BjLScpLAogICAgICAgIC4uLmNyZWF0ZUNsYXNzZXMod2lkZVBjLCAnd2lkZS1wYy0nKSwKICAgICAgXQogICAgfSwKICAgIGNvbFN0eWxlICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBwYWRkaW5nTGVmdDogdGhpcy5ndXR0ZXIgLyAyICsgJ3B4JywKICAgICAgICBwYWRkaW5nUmlnaHQ6IHRoaXMuZ3V0dGVyIC8gMiArICdweCcsCiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["col.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"col.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"col\" :class=\"colClass\" :style=\"colStyle\">\n    <slot></slot>\n  </div>\n</template>\n<script>\n  let validator = (value) => {\n    let keys = Object.keys(value)\n    let valid = true\n    keys.forEach(key => {\n      if (!['span', 'offset'].includes(key)) {\n        valid = false\n      }\n    })\n    return valid\n  }\n  export default {\n    name: 'GuluCol',\n    props: {\n      span: {\n        type: [Number, String]\n      },\n      offset: {\n        type: [Number, String]\n      },\n      ipad: {type: Object, validator,},\n      narrowPc: {type: Object, validator,},\n      pc: {type: Object, validator,},\n      widePc: {type: Object, validator,}\n    },\n    data () {\n      return {\n        gutter: 0,\n      }\n    },\n    methods: {\n      createClasses (obj, str = '') {\n        if (!obj) {return []}\n        let array = []\n        if (obj.span) { array.push(`col-${str}${obj.span}`) }\n        if (obj.offset) { array.push(`offset-${str}${obj.offset}`) }\n        return array\n      }\n    },\n    computed: {\n      colClass () {\n        let {span, offset, ipad, narrowPc, pc, widePc} = this\n        let createClasses = this.createClasses\n        return [\n          ...createClasses({span, offset}),\n          ...createClasses(ipad, 'ipad-'),\n          ...createClasses(narrowPc, 'narrow-pc-'),\n          ...createClasses(pc, 'pc-'),\n          ...createClasses(widePc, 'wide-pc-'),\n        ]\n      },\n      colStyle () {\n        return {\n          paddingLeft: this.gutter / 2 + 'px',\n          paddingRight: this.gutter / 2 + 'px',\n        }\n      }\n    }\n  }\n</script>\n<style scoped lang=\"scss\">\n  .col {\n    $class-prefix: col-;\n    @for $n from 1 through 24 {\n      &.#{$class-prefix}#{$n} {\n        width: ($n / 24) * 100%;\n      }\n    }\n    $class-prefix: offset-;\n    @for $n from 1 through 24 {\n      &.#{$class-prefix}#{$n} {\n        margin-left: ($n / 24) * 100%;\n      }\n    }\n    @media (min-width: 577px) {\n      $class-prefix: col-ipad-;\n      @for $n from 1 through 24 {\n        &.#{$class-prefix}#{$n} {\n          width: ($n / 24) * 100%;\n        }\n      }\n      $class-prefix: offset-ipad-;\n      @for $n from 1 through 24 {\n        &.#{$class-prefix}#{$n} {\n          margin-left: ($n / 24) * 100%;\n        }\n      }\n    }\n    @media (min-width: 769px){ // 770\n      $class-prefix: col-narrow-pc-;\n      @for $n from 1 through 24 {\n        &.#{$class-prefix}#{$n} {\n          width: ($n / 24) * 100%;\n        }\n      }\n      $class-prefix: offset-narrow-pc-;\n      @for $n from 1 through 24 {\n        &.#{$class-prefix}#{$n} {\n          margin-left: ($n / 24) * 100%;\n        }\n      }\n    }\n    @media (min-width: 993px) {\n      $class-prefix: col-pc-;\n      @for $n from 1 through 24 {\n        &.#{$class-prefix}#{$n} {\n          width: ($n / 24) * 100%;\n        }\n      }\n      $class-prefix: offset-pc-;\n      @for $n from 1 through 24 {\n        &.#{$class-prefix}#{$n} {\n          margin-left: ($n / 24) * 100%;\n        }\n      }\n    }\n    @media (min-width: 1201px) {\n      $class-prefix: col-wide-pc-;\n      @for $n from 1 through 24 {\n        &.#{$class-prefix}#{$n} {\n          width: ($n / 24) * 100%;\n        }\n      }\n      $class-prefix: offset-wide-pc-;\n      @for $n from 1 through 24 {\n        &.#{$class-prefix}#{$n} {\n          margin-left: ($n / 24) * 100%;\n        }\n      }\n    }\n  }\n</style>"]}]}