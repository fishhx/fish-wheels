{"remainingRequest":"/Users/apple/fish-wheels/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/fish-wheels/src/components/tabs/tabs-head.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/fish-wheels/src/components/tabs/tabs-head.vue","mtime":1592583571094},{"path":"/Users/apple/fish-wheels/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnR3VsdVRhYnNIZWFkJywKICBpbmplY3Q6IFsnZXZlbnRCdXMnXSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMuZXZlbnRCdXMuJG9uKCd1cGRhdGU6c2VsZWN0ZWQnLCAoaXRlbSwgdm0pID0+IHsKICAgICAgdGhpcy51cGRhdGVMaW5lUG9zaXRpb24odm0pCiAgICB9KQogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlTGluZVBvc2l0aW9uIChzZWxlY3RlZFZtKSB7CiAgICAgIGxldCB7d2lkdGgsIGxlZnR9ID0gc2VsZWN0ZWRWbS4kZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkKICAgICAgbGV0IHtsZWZ0OiBsZWZ0Mn0gPSB0aGlzLiRyZWZzLmhlYWQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkKICAgICAgdGhpcy4kcmVmcy5saW5lLnN0eWxlLndpZHRoID0gYCR7d2lkdGh9cHhgCiAgICAgIHRoaXMuJHJlZnMubGluZS5zdHlsZS5sZWZ0ID0gYCR7bGVmdCAtIGxlZnQyfXB4YAogICAgfQogIH0KfQo="},{"version":3,"sources":["tabs-head.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tabs-head.vue","sourceRoot":"src/components/tabs","sourcesContent":["<template>\n  <div class=\"tabs-head\" ref=\"head\">\n    <slot></slot>\n    <div class=\"line\" ref=\"line\"></div>\n    <div class=\"actions-wrapper\">\n      <slot name=\"actions\"></slot>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'GuluTabsHead',\n    inject: ['eventBus'],\n    mounted () {\n      this.eventBus.$on('update:selected', (item, vm) => {\n        this.updateLinePosition(vm)\n      })\n    },\n    methods: {\n      updateLinePosition (selectedVm) {\n        let {width, left} = selectedVm.$el.getBoundingClientRect()\n        let {left: left2} = this.$refs.head.getBoundingClientRect()\n        this.$refs.line.style.width = `${width}px`\n        this.$refs.line.style.left = `${left - left2}px`\n      }\n    }\n  }\n</script>\n<style scoped lang=\"scss\">\n  $tab-height: 40px;\n  $blue: #333;\n  $border-color: #ddd;\n  .tabs-head {\n    display: flex;\n    height: $tab-height;\n    justify-content: flex-start;\n    position: relative;\n    border-bottom: 1px solid $border-color;\n    > .line {\n      position: absolute;\n      bottom: 0;\n      border-bottom: 1px solid $blue;\n      transition: all 350ms;\n    }\n    > .actions-wrapper {\n      margin-left: auto;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0 1em;\n    }\n  }\n</style>"]}]}