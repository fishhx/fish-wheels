{"remainingRequest":"/Users/apple/fish-wheels/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/fish-wheels/src/components/row.vue?vue&type=style&index=0&id=23fc6a0c&scoped=true&lang=scss&","dependencies":[{"path":"/Users/apple/fish-wheels/src/components/row.vue","mtime":1592571465447},{"path":"/Users/apple/fish-wheels/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5yb3d7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAgJi5hbGlnbi1sZWZ0IHsKICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsKICB9CiAgJi5hbGlnbi1yaWdodCB7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwogIH0KICAmLmFsaWduLWNlbnRlciB7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICB9Cn0K"},{"version":3,"sources":["row.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"row.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"row\" :style=\"rowStyle\" :class=\"rowClass\">\n    <slot></slot>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'GuluRow',\n    props: {\n      gutter: {\n        type: [Number, String]\n      },\n      align: {\n        type: String,\n        validator (value) {\n          return ['left', 'right', 'center'].indexOf(value) >= 0\n        }\n      }\n    },\n    computed: {\n      rowStyle () {\n        let {gutter} = this\n        return {marginLeft: -gutter / 2 + 'px', marginRight: -gutter / 2 + 'px'}\n      },\n      rowClass () {\n        let {align} = this\n        return [align && `align-${align}`]\n      }\n    },\n    mounted () {\n      this.$children.forEach((vm) => {\n        vm.gutter = this.gutter\n      })\n    }\n  }\n</script>\n<style scoped lang=\"scss\">\n  .row{\n    display: flex;\n    flex-wrap: wrap;\n    &.align-left {\n      justify-content: flex-start;\n    }\n    &.align-right {\n      justify-content: flex-end;\n    }\n    &.align-center {\n      justify-content: center;\n    }\n  }\n</style>"]}]}