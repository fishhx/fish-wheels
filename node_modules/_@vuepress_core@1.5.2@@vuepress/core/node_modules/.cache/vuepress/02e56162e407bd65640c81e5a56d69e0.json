{"remainingRequest":"/Users/apple/fish-wheels/node_modules/_vue-loader@15.9.2@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/apple/fish-wheels/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js??ref--1-0!/Users/apple/fish-wheels/node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??ref--1-1!/Users/apple/fish-wheels/node_modules/_@vuepress_markdown-loader@1.5.2@@vuepress/markdown-loader/index.js??ref--1-2!/Users/apple/fish-wheels/docs/单元测试总结/README.md?vue&type=template&id=47a37296&","dependencies":[{"path":"/Users/apple/fish-wheels/docs/单元测试总结/README.md","mtime":1592721951158},{"path":"/Users/apple/fish-wheels/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/_vue-loader@15.9.2@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/fish-wheels/node_modules/_@vuepress_markdown-loader@1.5.2@@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}